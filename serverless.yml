frameworkVersion: v2.35.0
service: backend
useDotenv: true

plugins:
  - serverless-domain-manager

custom:
  certificateArn:
    development: arn:aws:acm:us-east-1:435765244332:certificate/779f6a51-049f-466c-9a86-960e21c0453b
  cognitoArn:
    local: arn:aws:cognito-idp:us-east-1:435765244332:userpool/us-east-1_Pku3BZzNi
    development: arn:aws:cognito-idp:us-east-1:435765244332:userpool/us-east-1_Pku3BZzNi
    production: '' # todo
  customDomain:
    apiType: rest
    domainName: ${self:custom.domains.${self:custom.stage}}
    basePath: ''
    certificateArn: ${self:custom.certificateArn.${self:custom.stage}}
    createRoute53Record: true
    endpointType: regional
    securityPolicy: tls_1_2
    stage: ${self:custom.stage}
  domains:
    development: api.gracemedicalvillagedev.com
    production: gracemedicalvillage.com
  stage: ${opt:stage, self:provider.stage}

package:
  individually: true

provider:
  name: aws
  region: us-east-1
  runtime: nodejs14.x
  stage: ${provider.stage, 'development'}
  environment:
    stage: ${self:custom.stage}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - rds:*
      Resource: '*'
  tracing:
    lambda: true

functions:
  api:
    handler: build/index.main
    timeout: 30
    events:
      - lambda-proxy:
          cors: true
          authorizer:
            name: cognito_auth
            arn: ${self:custom.cognitoArn.${self:custom.stage}}
