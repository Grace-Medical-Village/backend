frameworkVersion: v2.51.2
service: backend
useDotenv: true

plugins:
  - serverless-domain-manager
  - serverless-dotenv-plugin
  - serverless-webpack

custom:
  certificateArn:
    development: arn:aws:acm:us-east-1:435765244332:certificate/779f6a51-049f-466c-9a86-960e21c0453b
    production: arn:aws:acm:us-east-1:403617656420:certificate/c63545fa-8d30-4023-aa23-68bf5f4ba62f
  cognitoArn:
    local: arn:aws:cognito-idp:us-east-1:435765244332:userpool/us-east-1_Pku3BZzNi
    development: arn:aws:cognito-idp:us-east-1:435765244332:userpool/us-east-1_Pku3BZzNi
    production: arn:aws:cognito-idp:us-east-1:403617656420:userpool/us-east-1_mfAYQT96C
  customDomain:
    apiType: rest
    basePath: ''
    certificateArn: ${self:custom.certificateArn.${self:custom.stage}}
    createRoute53Record: true
    domainName: ${self:custom.domains.${self:custom.stage}}
    endpointType: regional
    securityPolicy: tls_1_2
    stage: ${self:custom.stage}
  domains:
    development: api.gracemedicalvillagedev.com
    production: api.gracemedicalvillage.com
  stage: ${opt:stage, self:provider.stage}
  webpack:
    webpackConfig: webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk
    packager: npm
    excludeFiles: \.ts|test|\.map

package:
  individually: true

provider:
  name: aws
  region: us-east-1
  runtime: nodejs14.x
  stage: ${provider.stage, 'development'}
  environment:
    stage: ${self:custom.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - rds-data:*
        - secretsmanager:GetSecretValue
      Resource: '*'
  logRetentionInDays: 30
  tracing:
    apiGateway: true
    lambda: true

functions:
  api:
    handler: src/index.main
    memorySize: 1024
    timeout: 30
    events:
      - http:
          authorizer:
            arn: ${self:custom.cognitoArn.${self:custom.stage}}
            name: cognito_auth
          cors: true
          method: any
          path: /{proxy+}
