frameworkVersion: v2.29.0
service: gmvc-api
useDotenv: true

plugins:
  - serverless-domain-manager
  - serverless-offline
  - serverless-pseudo-parameters

custom:
  certificateArn:
    development: arn:aws:acm:us-east-1:435765244332:certificate/779f6a51-049f-466c-9a86-960e21c0453b
  cognitoArn:
    local: arn:aws:cognito-idp:us-east-1:435765244332:userpool/us-east-1_Pku3BZzNi
    development: arn:aws:cognito-idp:us-east-1:435765244332:userpool/us-east-1_Pku3BZzNi
    production: '' # todo
  customDomain:
    apiType: http
    autoDomain: true
    domainName: ${self:custom.domains.${self:custom.stage}}
    basePath: ''
    certificateArn: ${self:custom.certificateArn.${self:custom.stage}}
    createRoute53Record: true
    endpointType: regional
    hostedZoneId: ${self:custom.hostedZoneId}
    securityPolicy: tls_1_2
    stage: ${self:custom.stage}
  domains:
    development: api.gracemedicalvillagedev.com
    production: gracemedicalvillage.com
  hostedZoneId:
    development: Z03413242K12VXBMESSYC
    production: '' #todo
  serverless-offline:
    host: localhost
    httpPort: 4000
  stage: ${opt:stage, self:provider.stage}

package:
  individually: true

provider:
  name: aws
  region: us-east-1
  runtime: nodejs12.x
  stage: ${provider.stage, 'development'}
  environment:
    stage: ${self:custom.stage}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - rds:*
      Resource: '*'
  tracing:
    lambda: true

functions:
  # delete-medication:
  #   handler: build/delete-medication.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: medication
  #         method: delete
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # delete-patient:
  #   handler: build/delete-patient.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient
  #         method: delete
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # delete-patient-condition:
  #   handler: build/delete-patient-condition.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient/condition
  #         method: delete
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # delete-patient-medication:
  #   handler: build/delete-patient-medication.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient/medication
  #         method: delete
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # delete-patient-metric:
  #   handler: build/delete-patient-metric.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient/metric
  #         method: delete
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # delete-patient-note:
  #   handler: build/delete-patient-note.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient/note
  #         method: delete
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # get-conditions:
  #   handler: build/get-conditions.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: conditions
  #         method: get
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  get-medications:
    handler: build/get-medications.main
    timeout: 15
    events:
      - http:
          path: medications
          method: get
          cors: true
          authorizer:
            name: cognito_auth
            arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # get-medication-categories:
  #   handler: build/get-medication-categories.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: medication-categories
  #         method: get
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # get-metrics:
  #   handler: build/get-metrics.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: metrics
  #         method: get
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # get-patient:
  #   handler: build/get-patient.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient
  #         method: get
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # get-patients:
  #   handler: build/get-patients.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patients
  #         method: get
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # post-medication:
  #   handler: build/post-medication.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: medication
  #         method: post
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # post-patient:
  #   handler: build/post-patient.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient
  #         method: post
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # post-patient-condition:
  #   handler: build/post-patient-condition.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient/condition
  #         method: post
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # post-patient-medication:
  #   handler: build/post-patient-medication.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient/medication
  #         method: post
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # post-patient-metric:
  #   handler: build/post-patient-metric.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient/metric
  #         method: post
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # post-patient-note:
  #   handler: build/post-patient-note.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient/note
  #         method: post
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # put-medication:
  #   handler: build/put-medication.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: medication
  #         method: put
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # put-patient:
  #   handler: build/put-patient.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient
  #         method: put
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # put-patient-metric:
  #   handler: build/put-patient-metric.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient/metric
  #         method: put
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}

  # put-patient-note:
  #   handler: build/put-patient-note.main
  #   timeout: 15
  #   events:
  #     - http:
  #         path: patient/note
  #         method: put
  #         cors: true
  #         authorizer:
  #           name: cognito_auth
  #           arn: ${self:custom.cognitoArn.${self:custom.stage}}
# resources:
# Resources:
# GatewayResponseDefault4XX:
# Type: AWS::ApiGateway::GatewayResponse
# Properties:
# ResponseParameters:
# gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
# gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
# ResponseType: DEFAULT_4XX
# RestApiId: ${self:custom.restApiId.${self:custom.stage}}
